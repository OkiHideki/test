saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "ArgMax"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dimension"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "output_type"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "output_type"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "AssignAddVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "AssignVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BiasAddGrad"
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "Conv2D"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
              s: "EXPLICIT"
            }
          }
        }
        attr {
          name: "explicit_paddings"
          type: "list(int)"
          default_value {
            list {
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Conv2DBackpropFilter"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter_sizes"
          type: DT_INT32
        }
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
              s: "EXPLICIT"
            }
          }
        }
        attr {
          name: "explicit_paddings"
          type: "list(int)"
          default_value {
            list {
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Conv2DBackpropInput"
        input_arg {
          name: "input_sizes"
          type: DT_INT32
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
              s: "EXPLICIT"
            }
          }
        }
        attr {
          name: "explicit_paddings"
          type: "list(int)"
          default_value {
            list {
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "DivNoNan"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Equal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LogSoftmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "logsoftmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "MaxPool"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_QINT8
            }
          }
        }
        attr {
          name: "ksize"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "strides"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
              s: "NCHW_VECT_C"
            }
          }
        }
      }
      op {
        name: "MaxPoolGrad"
        input_arg {
          name: "orig_input"
          type_attr: "T"
        }
        input_arg {
          name: "orig_output"
          type_attr: "T"
        }
        input_arg {
          name: "grad"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "ksize"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "strides"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "ReadVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "Relu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_QINT8
            }
          }
        }
      }
      op {
        name: "ReluGrad"
        input_arg {
          name: "gradients"
          type_attr: "T"
        }
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "backprops"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ResourceApplyAdadelta"
        input_arg {
          name: "var"
          type: DT_RESOURCE
        }
        input_arg {
          name: "accum"
          type: DT_RESOURCE
        }
        input_arg {
          name: "accum_update"
          type: DT_RESOURCE
        }
        input_arg {
          name: "lr"
          type_attr: "T"
        }
        input_arg {
          name: "rho"
          type_attr: "T"
        }
        input_arg {
          name: "epsilon"
          type_attr: "T"
        }
        input_arg {
          name: "grad"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: false
          }
        }
        is_stateful: true
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Size"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Softmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "softmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "SoftmaxCrossEntropyWithLogits"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        input_arg {
          name: "labels"
          type_attr: "T"
        }
        output_arg {
          name: "loss"
          type_attr: "T"
        }
        output_arg {
          name: "backprop"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VarHandleOp"
        output_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
        is_stateful: true
      }
      op {
        name: "VarIsInitializedOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "is_initialized"
          type: DT_BOOL
        }
        is_stateful: true
      }
      op {
        name: "ZerosLike"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
    }
    tags: "serve"
    tensorflow_version: "1.14.0"
    tensorflow_git_version: "unknown"
  }
  graph_def {
    node {
      name: "init"
      op: "NoOp"
    }
    node {
      name: "conv2d_1_input"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 28
            }
            dim {
              size: 28
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.14213381707668304
          }
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.14213381707668304
          }
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv2d_1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "conv2d_1/kernel/Initializer/random_uniform/max"
      input: "conv2d_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
      input: "conv2d_1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "conv2d_1/kernel/Initializer/random_uniform/mul"
      input: "conv2d_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2d_1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv2d_1/kernel"
        }
      }
    }
    node {
      name: "conv2d_1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv2d_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv2d_1/kernel"
      input: "conv2d_1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv2d_1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv2d_1/bias"
        }
      }
    }
    node {
      name: "conv2d_1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv2d_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2d_1/bias/Assign"
      op: "AssignVariableOp"
      input: "conv2d_1/bias"
      input: "conv2d_1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_1/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv2d_1/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_1/Conv2D"
      op: "Conv2D"
      input: "conv2d_1_input"
      input: "conv2d_1/Conv2D/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 26
              }
              dim {
                size: 26
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv2d_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_1/BiasAdd"
      op: "BiasAdd"
      input: "conv2d_1/Conv2D"
      input: "conv2d_1/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 26
              }
              dim {
                size: 26
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "conv2d_1/Relu"
      op: "Relu"
      input: "conv2d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 26
              }
              dim {
                size: 26
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.0833333358168602
          }
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0833333358168602
          }
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv2d_2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "conv2d_2/kernel/Initializer/random_uniform/max"
      input: "conv2d_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
      input: "conv2d_2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "conv2d_2/kernel/Initializer/random_uniform/mul"
      input: "conv2d_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2d_2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv2d_2/kernel"
        }
      }
    }
    node {
      name: "conv2d_2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv2d_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv2d_2/kernel"
      input: "conv2d_2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv2d_2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv2d_2/bias"
        }
      }
    }
    node {
      name: "conv2d_2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv2d_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2d_2/bias/Assign"
      op: "AssignVariableOp"
      input: "conv2d_2/bias"
      input: "conv2d_2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_2/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv2d_2/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_2/Conv2D"
      op: "Conv2D"
      input: "conv2d_1/Relu"
      input: "conv2d_2/Conv2D/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv2d_2/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2d_2/BiasAdd"
      op: "BiasAdd"
      input: "conv2d_2/Conv2D"
      input: "conv2d_2/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "conv2d_2/Relu"
      op: "Relu"
      input: "conv2d_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "max_pooling2d_1/MaxPool"
      op: "MaxPool"
      input: "conv2d_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "flatten_1/Shape"
      op: "Shape"
      input: "max_pooling2d_1/MaxPool"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "flatten_1/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "flatten_1/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "flatten_1/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "flatten_1/strided_slice"
      op: "StridedSlice"
      input: "flatten_1/Shape"
      input: "flatten_1/strided_slice/stack"
      input: "flatten_1/strided_slice/stack_1"
      input: "flatten_1/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "flatten_1/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "flatten_1/Reshape/shape"
      op: "Pack"
      input: "flatten_1/strided_slice"
      input: "flatten_1/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "flatten_1/Reshape"
      op: "Reshape"
      input: "max_pooling2d_1/MaxPool"
      input: "flatten_1/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9216
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000$\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "dense_1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.02534015104174614
          }
        }
      }
    }
    node {
      name: "dense_1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.02534015104174614
          }
        }
      }
    }
    node {
      name: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dense_1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dense_1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "dense_1/kernel/Initializer/random_uniform/max"
      input: "dense_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
      input: "dense_1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "dense_1/kernel/Initializer/random_uniform/mul"
      input: "dense_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9216
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dense_1/kernel"
        }
      }
    }
    node {
      name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_1/kernel/Assign"
      op: "AssignVariableOp"
      input: "dense_1/kernel"
      input: "dense_1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dense_1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dense_1/bias"
        }
      }
    }
    node {
      name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_1/bias/Assign"
      op: "AssignVariableOp"
      input: "dense_1/bias"
      input: "dense_1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/MatMul"
      op: "MatMul"
      input: "flatten_1/Reshape"
      input: "dense_1/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "dense_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/BiasAdd"
      op: "BiasAdd"
      input: "dense_1/MatMul"
      input: "dense_1/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "dense_1/Relu"
      op: "Relu"
      input: "dense_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "dense_2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.20851440727710724
          }
        }
      }
    }
    node {
      name: "dense_2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20851440727710724
          }
        }
      }
    }
    node {
      name: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dense_2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dense_2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "dense_2/kernel/Initializer/random_uniform/max"
      input: "dense_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
      input: "dense_2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "dense_2/kernel/Initializer/random_uniform/mul"
      input: "dense_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dense_2/kernel"
        }
      }
    }
    node {
      name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_2/kernel/Assign"
      op: "AssignVariableOp"
      input: "dense_2/kernel"
      input: "dense_2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dense_2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dense_2/bias"
        }
      }
    }
    node {
      name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_2/bias/Assign"
      op: "AssignVariableOp"
      input: "dense_2/bias"
      input: "dense_2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_2/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_2/MatMul"
      op: "MatMul"
      input: "dense_1/Relu"
      input: "dense_2/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "dense_2/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_2/BiasAdd"
      op: "BiasAdd"
      input: "dense_2/MatMul"
      input: "dense_2/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "dense_2/Softmax"
      op: "Softmax"
      input: "dense_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp"
      op: "AssignVariableOp"
      input: "conv2d_1/kernel"
      input: "Placeholder"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_1/kernel"
      input: "^AssignVariableOp"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "conv2d_1/bias"
      input: "Placeholder_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "conv2d_1/bias"
      input: "^AssignVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "conv2d_2/kernel"
      input: "Placeholder_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "conv2d_2/kernel"
      input: "^AssignVariableOp_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_3"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "conv2d_2/bias"
      input: "Placeholder_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "conv2d_2/bias"
      input: "^AssignVariableOp_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_4"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9216
            }
            dim {
              size: 128
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "dense_1/kernel"
      input: "Placeholder_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_4"
      op: "ReadVariableOp"
      input: "dense_1/kernel"
      input: "^AssignVariableOp_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_5"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "dense_1/bias"
      input: "Placeholder_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_5"
      op: "ReadVariableOp"
      input: "dense_1/bias"
      input: "^AssignVariableOp_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_6"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_6"
      op: "AssignVariableOp"
      input: "dense_2/kernel"
      input: "Placeholder_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_6"
      op: "ReadVariableOp"
      input: "dense_2/kernel"
      input: "^AssignVariableOp_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_7"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_7"
      op: "AssignVariableOp"
      input: "dense_2/bias"
      input: "Placeholder_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_7"
      op: "ReadVariableOp"
      input: "dense_2/bias"
      input: "^AssignVariableOp_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_1"
      op: "VarIsInitializedOp"
      input: "conv2d_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_2"
      op: "VarIsInitializedOp"
      input: "dense_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_3"
      op: "VarIsInitializedOp"
      input: "dense_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_4"
      op: "VarIsInitializedOp"
      input: "conv2d_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_5"
      op: "VarIsInitializedOp"
      input: "conv2d_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_6"
      op: "VarIsInitializedOp"
      input: "dense_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_7"
      op: "VarIsInitializedOp"
      input: "conv2d_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init_1"
      op: "NoOp"
      input: "^conv2d_1/bias/Assign"
      input: "^conv2d_1/kernel/Assign"
      input: "^conv2d_2/bias/Assign"
      input: "^conv2d_2/kernel/Assign"
      input: "^dense_1/bias/Assign"
      input: "^dense_1/kernel/Assign"
      input: "^dense_2/bias/Assign"
      input: "^dense_2/kernel/Assign"
    }
    node {
      name: "dense_2_target"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "total/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@total"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "total"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@total"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "total"
        }
      }
    }
    node {
      name: "total/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "total"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "total/Assign"
      op: "AssignVariableOp"
      input: "total"
      input: "total/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@total"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "total/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "total"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@total"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "count/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@count"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "count"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@count"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "count"
        }
      }
    }
    node {
      name: "count/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "count"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "count/Assign"
      op: "AssignVariableOp"
      input: "count"
      input: "count/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@count"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "count/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "count"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@count"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/acc/ArgMax/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "metrics/acc/ArgMax"
      op: "ArgMax"
      input: "dense_2_target"
      input: "metrics/acc/ArgMax/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "metrics/acc/ArgMax_1/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "metrics/acc/ArgMax_1"
      op: "ArgMax"
      input: "dense_2/Softmax"
      input: "metrics/acc/ArgMax_1/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "metrics/acc/Equal"
      op: "Equal"
      input: "metrics/acc/ArgMax"
      input: "metrics/acc/ArgMax_1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "metrics/acc/Cast"
      op: "Cast"
      input: "metrics/acc/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "metrics/acc/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "metrics/acc/Sum"
      op: "Sum"
      input: "metrics/acc/Cast"
      input: "metrics/acc/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "metrics/acc/AssignAddVariableOp"
      op: "AssignAddVariableOp"
      input: "total"
      input: "metrics/acc/Sum"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/acc/ReadVariableOp"
      op: "ReadVariableOp"
      input: "total"
      input: "^metrics/acc/AssignAddVariableOp"
      input: "^metrics/acc/Sum"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/acc/Size"
      op: "Size"
      input: "metrics/acc/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "metrics/acc/Cast_1"
      op: "Cast"
      input: "metrics/acc/Size"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "metrics/acc/AssignAddVariableOp_1"
      op: "AssignAddVariableOp"
      input: "count"
      input: "metrics/acc/Cast_1"
      input: "^metrics/acc/AssignAddVariableOp"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/acc/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "count"
      input: "^metrics/acc/AssignAddVariableOp"
      input: "^metrics/acc/AssignAddVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/acc/div_no_nan/ReadVariableOp"
      op: "ReadVariableOp"
      input: "total"
      input: "^metrics/acc/AssignAddVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/acc/div_no_nan/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "count"
      input: "^metrics/acc/AssignAddVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/acc/div_no_nan"
      op: "DivNoNan"
      input: "metrics/acc/div_no_nan/ReadVariableOp"
      input: "metrics/acc/div_no_nan/ReadVariableOp_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "metrics/acc/Identity"
      op: "Identity"
      input: "metrics/acc/div_no_nan"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Shape"
      op: "Shape"
      input: "dense_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Shape_1"
      op: "Shape"
      input: "dense_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub"
      op: "Sub"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Rank_1"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice/begin"
      op: "Pack"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice"
      op: "Slice"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Shape_1"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice/begin"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice/size"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat/values_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat"
      op: "ConcatV2"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat/values_0"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape"
      op: "Reshape"
      input: "dense_2/BiasAdd"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Rank_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Shape_2"
      op: "Shape"
      input: "dense_2_target"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub_1"
      op: "Sub"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Rank_2"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
      op: "Pack"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub_1"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_1"
      op: "Slice"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Shape_2"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_1/size"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat_1/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat_1"
      op: "ConcatV2"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_1"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_1"
      op: "Reshape"
      input: "dense_2_target"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits"
      op: "SoftmaxCrossEntropyWithLogits"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub_2"
      op: "Sub"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Rank"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/size"
      op: "Pack"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Sub_2"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_2"
      op: "Slice"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Shape"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_2/size"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
      op: "Reshape"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Slice_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
      op: "Shape"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
      op: "NoOp"
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights/ones_like/Shape"
      op: "Shape"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
      input: "^loss/dense_2_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights/ones_like/Const"
      op: "Const"
      input: "^loss/dense_2_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights/ones_like"
      op: "Fill"
      input: "loss/dense_2_loss/weighted_loss/broadcast_weights/ones_like/Shape"
      input: "loss/dense_2_loss/weighted_loss/broadcast_weights/ones_like/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/broadcast_weights"
      op: "Mul"
      input: "loss/dense_2_loss/weighted_loss/Const"
      input: "loss/dense_2_loss/weighted_loss/broadcast_weights/ones_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/weighted_loss/Mul"
      op: "Mul"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
      input: "loss/dense_2_loss/weighted_loss/broadcast_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/Sum"
      op: "Sum"
      input: "loss/dense_2_loss/weighted_loss/Mul"
      input: "loss/dense_2_loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/dense_2_loss/num_elements"
      op: "Size"
      input: "loss/dense_2_loss/weighted_loss/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_2_loss/num_elements/Cast"
      op: "Cast"
      input: "loss/dense_2_loss/num_elements"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_2_loss/Sum_1"
      op: "Sum"
      input: "loss/dense_2_loss/Sum"
      input: "loss/dense_2_loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/dense_2_loss/value"
      op: "DivNoNan"
      input: "loss/dense_2_loss/Sum_1"
      input: "loss/dense_2_loss/num_elements/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/dense_2_loss/value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "keras_learning_phase/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node {
      name: "keras_learning_phase"
      op: "PlaceholderWithDefault"
      input: "keras_learning_phase/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/Fill"
      op: "Fill"
      input: "Adadelta/gradients/Shape"
      input: "Adadelta/gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/mul_grad/Mul"
      op: "Mul"
      input: "Adadelta/gradients/Fill"
      input: "loss/dense_2_loss/value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/mul_grad/Mul_1"
      op: "Mul"
      input: "Adadelta/gradients/Fill"
      input: "loss/mul/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/Shape"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/div_no_nan"
      op: "DivNoNan"
      input: "Adadelta/gradients/loss/mul_grad/Mul_1"
      input: "loss/dense_2_loss/num_elements/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/Sum"
      op: "Sum"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/div_no_nan"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/Reshape"
      op: "Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/Sum"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/Neg"
      op: "Neg"
      input: "loss/dense_2_loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/div_no_nan_1"
      op: "DivNoNan"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/Neg"
      input: "loss/dense_2_loss/num_elements/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/div_no_nan_2"
      op: "DivNoNan"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/div_no_nan_1"
      input: "loss/dense_2_loss/num_elements/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/mul"
      op: "Mul"
      input: "Adadelta/gradients/loss/mul_grad/Mul_1"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/div_no_nan_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/Sum_1"
      op: "Sum"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/mul"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/value_grad/Reshape_1"
      op: "Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/Sum_1"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/Sum_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/value_grad/Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/Sum_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_1_grad/Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Reshape"
      op: "Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_1_grad/Tile"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Shape"
      op: "Shape"
      input: "loss/dense_2_loss/weighted_loss/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Tile"
      op: "Tile"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Shape"
      op: "Shape"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_2_loss/weighted_loss/broadcast_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Shape"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Mul"
      op: "Mul"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Tile"
      input: "loss/dense_2_loss/weighted_loss/broadcast_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Sum"
      op: "Sum"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Mul"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Reshape"
      op: "Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Sum"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Mul_1"
      op: "Mul"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2"
      input: "Adadelta/gradients/loss/dense_2_loss/Sum_grad/Tile"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Sum_1"
      op: "Sum"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Mul_1"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Reshape_1"
      op: "Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Sum_1"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
      op: "Shape"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
      op: "Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/weighted_loss/Mul_grad/Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/zeros_like"
      op: "ZerosLike"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
      op: "ExpandDims"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/mul"
      op: "Mul"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
      op: "LogSoftmax"
      input: "loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/Neg"
      op: "Neg"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
      op: "ExpandDims"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/mul_1"
      op: "Mul"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
      op: "Shape"
      input: "dense_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
      op: "Reshape"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits_grad/mul"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "Adadelta/gradients/dense_2/MatMul_grad/MatMul"
      op: "MatMul"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
      input: "dense_2/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/gradients/dense_2/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "dense_1/Relu"
      input: "Adadelta/gradients/loss/dense_2_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adadelta/gradients/dense_1/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "Adadelta/gradients/dense_2/MatMul_grad/MatMul"
      input: "dense_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "Adadelta/gradients/dense_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "Adadelta/gradients/dense_1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "Adadelta/gradients/dense_1/Relu_grad/ReluGrad"
      input: "dense_1/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9216
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/gradients/dense_1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "flatten_1/Reshape"
      input: "Adadelta/gradients/dense_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adadelta/gradients/flatten_1/Reshape_grad/Shape"
      op: "Shape"
      input: "max_pooling2d_1/MaxPool"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/flatten_1/Reshape_grad/Reshape"
      op: "Reshape"
      input: "Adadelta/gradients/dense_1/MatMul_grad/MatMul"
      input: "Adadelta/gradients/flatten_1/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
      op: "MaxPoolGrad"
      input: "conv2d_2/Relu"
      input: "max_pooling2d_1/MaxPool"
      input: "Adadelta/gradients/flatten_1/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_2/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "Adadelta/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
      input: "conv2d_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "Adadelta/gradients/conv2d_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_2/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "conv2d_1/Relu"
      input: "conv2d_2/Conv2D/ReadVariableOp"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "Adadelta/gradients/conv2d_2/Conv2D_grad/ShapeN"
      input: "conv2d_2/Conv2D/ReadVariableOp"
      input: "Adadelta/gradients/conv2d_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 26
              }
              dim {
                size: 26
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv2d_1/Relu"
      input: "Adadelta/gradients/conv2d_2/Conv2D_grad/ShapeN:1"
      input: "Adadelta/gradients/conv2d_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_1/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "Adadelta/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      input: "conv2d_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 26
              }
              dim {
                size: 26
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "Adadelta/gradients/conv2d_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_1/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "conv2d_1_input"
      input: "conv2d_1/Conv2D/ReadVariableOp"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "Adadelta/gradients/conv2d_1/Conv2D_grad/ShapeN"
      input: "conv2d_1/Conv2D/ReadVariableOp"
      input: "Adadelta/gradients/conv2d_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv2d_1_input"
      input: "Adadelta/gradients/conv2d_1/Conv2D_grad/ShapeN:1"
      input: "Adadelta/gradients/conv2d_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/iter/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/iter"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node {
      name: "Adadelta/iter"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/iter"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/iter"
        }
      }
    }
    node {
      name: "Adadelta/iter/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/iter"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/iter/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/iter"
      input: "Adadelta/iter/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/iter"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "Adadelta/iter/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/iter"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/iter"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "Adadelta/decay/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/decay"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/decay"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/decay"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/decay"
        }
      }
    }
    node {
      name: "Adadelta/decay/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/decay"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/decay/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/decay"
      input: "Adadelta/decay/Initializer/initial_value"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/decay"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/decay/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/decay"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/decay"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/learning_rate/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/learning_rate"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "Adadelta/learning_rate"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/learning_rate"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/learning_rate"
        }
      }
    }
    node {
      name: "Adadelta/learning_rate/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/learning_rate/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/learning_rate"
      input: "Adadelta/learning_rate/Initializer/initial_value"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/learning_rate"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/learning_rate/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/learning_rate"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/rho/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/rho"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "Adadelta/rho"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/rho"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/rho"
        }
      }
    }
    node {
      name: "Adadelta/rho/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/rho/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/rho"
      input: "Adadelta/rho/Initializer/initial_value"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/rho"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/rho/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/rho"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_grad/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_grad"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/conv2d_1/kernel/accum_grad"
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_grad/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_1/kernel/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_grad/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_grad"
      input: "Adadelta/conv2d_1/kernel/accum_grad/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_grad/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_grad/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_grad"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/conv2d_1/bias/accum_grad"
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_grad/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_1/bias/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_grad/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_grad"
      input: "Adadelta/conv2d_1/bias/accum_grad/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_grad/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_grad/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_grad/Initializer/zeros"
      op: "Fill"
      input: "Adadelta/conv2d_2/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
      input: "Adadelta/conv2d_2/kernel/accum_grad/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_grad"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/conv2d_2/kernel/accum_grad"
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_grad/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_2/kernel/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_grad/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_grad"
      input: "Adadelta/conv2d_2/kernel/accum_grad/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_grad/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_grad/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_grad"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/conv2d_2/bias/accum_grad"
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_grad/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_2/bias/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_grad/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_grad"
      input: "Adadelta/conv2d_2/bias/accum_grad/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_grad/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000$\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_grad/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_grad/Initializer/zeros"
      op: "Fill"
      input: "Adadelta/dense_1/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
      input: "Adadelta/dense_1/kernel/accum_grad/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_grad"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9216
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/dense_1/kernel/accum_grad"
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_grad/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_1/kernel/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_grad/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/kernel/accum_grad"
      input: "Adadelta/dense_1/kernel/accum_grad/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_grad/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/dense_1/kernel/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_grad/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_grad"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/dense_1/bias/accum_grad"
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_grad/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_1/bias/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_grad/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/bias/accum_grad"
      input: "Adadelta/dense_1/bias/accum_grad/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_grad/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/dense_1/bias/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_grad/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_grad/Initializer/zeros"
      op: "Fill"
      input: "Adadelta/dense_2/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
      input: "Adadelta/dense_2/kernel/accum_grad/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_grad"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/dense_2/kernel/accum_grad"
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_grad/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_2/kernel/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_grad/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/kernel/accum_grad"
      input: "Adadelta/dense_2/kernel/accum_grad/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_grad/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/dense_2/kernel/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_grad/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_grad"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/dense_2/bias/accum_grad"
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_grad/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_2/bias/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_grad/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/bias/accum_grad"
      input: "Adadelta/dense_2/bias/accum_grad/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_grad/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/dense_2/bias/accum_grad"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_var/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_var"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/conv2d_1/kernel/accum_var"
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_var/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_1/kernel/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_var/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_var"
      input: "Adadelta/conv2d_1/kernel/accum_var/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/kernel/accum_var/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_var/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_var"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/conv2d_1/bias/accum_var"
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_var/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_1/bias/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_var/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_var"
      input: "Adadelta/conv2d_1/bias/accum_var/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_1/bias/accum_var/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_var/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_var/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_var/Initializer/zeros"
      op: "Fill"
      input: "Adadelta/conv2d_2/kernel/accum_var/Initializer/zeros/shape_as_tensor"
      input: "Adadelta/conv2d_2/kernel/accum_var/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_var"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/conv2d_2/kernel/accum_var"
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_var/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_2/kernel/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_var/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_var"
      input: "Adadelta/conv2d_2/kernel/accum_var/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/kernel/accum_var/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_var/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_var"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/conv2d_2/bias/accum_var"
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_var/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_2/bias/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_var/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_var"
      input: "Adadelta/conv2d_2/bias/accum_var/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/conv2d_2/bias/accum_var/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_var/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000$\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_var/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_var/Initializer/zeros"
      op: "Fill"
      input: "Adadelta/dense_1/kernel/accum_var/Initializer/zeros/shape_as_tensor"
      input: "Adadelta/dense_1/kernel/accum_var/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_var"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9216
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/dense_1/kernel/accum_var"
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_var/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_1/kernel/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_var/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/kernel/accum_var"
      input: "Adadelta/dense_1/kernel/accum_var/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_1/kernel/accum_var/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/dense_1/kernel/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_var/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_var"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/dense_1/bias/accum_var"
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_var/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_1/bias/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_var/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/bias/accum_var"
      input: "Adadelta/dense_1/bias/accum_var/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_1/bias/accum_var/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/dense_1/bias/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_var/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_var/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_var/Initializer/zeros"
      op: "Fill"
      input: "Adadelta/dense_2/kernel/accum_var/Initializer/zeros/shape_as_tensor"
      input: "Adadelta/dense_2/kernel/accum_var/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_var"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/dense_2/kernel/accum_var"
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_var/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_2/kernel/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_var/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/kernel/accum_var"
      input: "Adadelta/dense_2/kernel/accum_var/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_2/kernel/accum_var/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/dense_2/kernel/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_var/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_var"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/dense_2/bias/accum_var"
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_var/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_2/bias/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_var/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/bias/accum_var"
      input: "Adadelta/dense_2/bias/accum_var/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/dense_2/bias/accum_var/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/dense_2/bias/accum_var"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_1/kernel/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_1/kernel/ResourceApplyAdadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_1/kernel/ResourceApplyAdadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_1/kernel/ResourceApplyAdadelta"
      op: "ResourceApplyAdadelta"
      input: "conv2d_1/kernel"
      input: "Adadelta/conv2d_1/kernel/accum_grad"
      input: "Adadelta/conv2d_1/kernel/accum_var"
      input: "Adadelta/Adadelta/update_conv2d_1/kernel/ResourceApplyAdadelta/ReadVariableOp"
      input: "Adadelta/Adadelta/update_conv2d_1/kernel/ResourceApplyAdadelta/ReadVariableOp_1"
      input: "Adadelta/Adadelta/update_conv2d_1/kernel/Const"
      input: "Adadelta/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_1/bias/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_1/bias/ResourceApplyAdadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_1/bias/ResourceApplyAdadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_1/bias/ResourceApplyAdadelta"
      op: "ResourceApplyAdadelta"
      input: "conv2d_1/bias"
      input: "Adadelta/conv2d_1/bias/accum_grad"
      input: "Adadelta/conv2d_1/bias/accum_var"
      input: "Adadelta/Adadelta/update_conv2d_1/bias/ResourceApplyAdadelta/ReadVariableOp"
      input: "Adadelta/Adadelta/update_conv2d_1/bias/ResourceApplyAdadelta/ReadVariableOp_1"
      input: "Adadelta/Adadelta/update_conv2d_1/bias/Const"
      input: "Adadelta/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_2/kernel/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_2/kernel/ResourceApplyAdadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_2/kernel/ResourceApplyAdadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_2/kernel/ResourceApplyAdadelta"
      op: "ResourceApplyAdadelta"
      input: "conv2d_2/kernel"
      input: "Adadelta/conv2d_2/kernel/accum_grad"
      input: "Adadelta/conv2d_2/kernel/accum_var"
      input: "Adadelta/Adadelta/update_conv2d_2/kernel/ResourceApplyAdadelta/ReadVariableOp"
      input: "Adadelta/Adadelta/update_conv2d_2/kernel/ResourceApplyAdadelta/ReadVariableOp_1"
      input: "Adadelta/Adadelta/update_conv2d_2/kernel/Const"
      input: "Adadelta/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_2/bias/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_2/bias/ResourceApplyAdadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_2/bias/ResourceApplyAdadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_conv2d_2/bias/ResourceApplyAdadelta"
      op: "ResourceApplyAdadelta"
      input: "conv2d_2/bias"
      input: "Adadelta/conv2d_2/bias/accum_grad"
      input: "Adadelta/conv2d_2/bias/accum_var"
      input: "Adadelta/Adadelta/update_conv2d_2/bias/ResourceApplyAdadelta/ReadVariableOp"
      input: "Adadelta/Adadelta/update_conv2d_2/bias/ResourceApplyAdadelta/ReadVariableOp_1"
      input: "Adadelta/Adadelta/update_conv2d_2/bias/Const"
      input: "Adadelta/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_1/kernel/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_1/kernel/ResourceApplyAdadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_1/kernel/ResourceApplyAdadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_1/kernel/ResourceApplyAdadelta"
      op: "ResourceApplyAdadelta"
      input: "dense_1/kernel"
      input: "Adadelta/dense_1/kernel/accum_grad"
      input: "Adadelta/dense_1/kernel/accum_var"
      input: "Adadelta/Adadelta/update_dense_1/kernel/ResourceApplyAdadelta/ReadVariableOp"
      input: "Adadelta/Adadelta/update_dense_1/kernel/ResourceApplyAdadelta/ReadVariableOp_1"
      input: "Adadelta/Adadelta/update_dense_1/kernel/Const"
      input: "Adadelta/gradients/dense_1/MatMul_grad/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_1/bias/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_1/bias/ResourceApplyAdadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_1/bias/ResourceApplyAdadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_1/bias/ResourceApplyAdadelta"
      op: "ResourceApplyAdadelta"
      input: "dense_1/bias"
      input: "Adadelta/dense_1/bias/accum_grad"
      input: "Adadelta/dense_1/bias/accum_var"
      input: "Adadelta/Adadelta/update_dense_1/bias/ResourceApplyAdadelta/ReadVariableOp"
      input: "Adadelta/Adadelta/update_dense_1/bias/ResourceApplyAdadelta/ReadVariableOp_1"
      input: "Adadelta/Adadelta/update_dense_1/bias/Const"
      input: "Adadelta/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_2/kernel/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_2/kernel/ResourceApplyAdadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_2/kernel/ResourceApplyAdadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_2/kernel/ResourceApplyAdadelta"
      op: "ResourceApplyAdadelta"
      input: "dense_2/kernel"
      input: "Adadelta/dense_2/kernel/accum_grad"
      input: "Adadelta/dense_2/kernel/accum_var"
      input: "Adadelta/Adadelta/update_dense_2/kernel/ResourceApplyAdadelta/ReadVariableOp"
      input: "Adadelta/Adadelta/update_dense_2/kernel/ResourceApplyAdadelta/ReadVariableOp_1"
      input: "Adadelta/Adadelta/update_dense_2/kernel/Const"
      input: "Adadelta/gradients/dense_2/MatMul_grad/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_2/bias/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_2/bias/ResourceApplyAdadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_2/bias/ResourceApplyAdadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/update_dense_2/bias/ResourceApplyAdadelta"
      op: "ResourceApplyAdadelta"
      input: "dense_2/bias"
      input: "Adadelta/dense_2/bias/accum_grad"
      input: "Adadelta/dense_2/bias/accum_var"
      input: "Adadelta/Adadelta/update_dense_2/bias/ResourceApplyAdadelta/ReadVariableOp"
      input: "Adadelta/Adadelta/update_dense_2/bias/ResourceApplyAdadelta/ReadVariableOp_1"
      input: "Adadelta/Adadelta/update_dense_2/bias/Const"
      input: "Adadelta/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/Const"
      op: "Const"
      input: "^Adadelta/Adadelta/update_conv2d_1/bias/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_conv2d_1/kernel/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_conv2d_2/bias/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_conv2d_2/kernel/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_dense_1/bias/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_dense_1/kernel/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_dense_2/bias/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_dense_2/kernel/ResourceApplyAdadelta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/AssignAddVariableOp"
      op: "AssignAddVariableOp"
      input: "Adadelta/iter"
      input: "Adadelta/Adadelta/Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "Adadelta/Adadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/iter"
      input: "^Adadelta/Adadelta/AssignAddVariableOp"
      input: "^Adadelta/Adadelta/update_conv2d_1/bias/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_conv2d_1/kernel/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_conv2d_2/bias/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_conv2d_2/kernel/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_dense_1/bias/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_dense_1/kernel/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_dense_2/bias/ResourceApplyAdadelta"
      input: "^Adadelta/Adadelta/update_dense_2/kernel/ResourceApplyAdadelta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "training_1/group_deps"
      op: "NoOp"
      input: "^Adadelta/Adadelta/AssignAddVariableOp"
      input: "^loss/mul"
    }
    node {
      name: "VarIsInitializedOp_8"
      op: "VarIsInitializedOp"
      input: "Adadelta/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_9"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_2/kernel/accum_var"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_10"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_1/kernel/accum_grad"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_11"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_1/bias/accum_var"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_12"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_2/bias/accum_grad"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_13"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_2/kernel/accum_grad"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_14"
      op: "VarIsInitializedOp"
      input: "count"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_15"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_1/kernel/accum_grad"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_16"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_1/kernel/accum_var"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_17"
      op: "VarIsInitializedOp"
      input: "Adadelta/iter"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_18"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_2/kernel/accum_var"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_19"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_1/bias/accum_grad"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_20"
      op: "VarIsInitializedOp"
      input: "Adadelta/rho"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_21"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_1/bias/accum_var"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_22"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_2/bias/accum_grad"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_23"
      op: "VarIsInitializedOp"
      input: "Adadelta/decay"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_24"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_1/kernel/accum_var"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_25"
      op: "VarIsInitializedOp"
      input: "Adadelta/dense_2/bias/accum_var"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_26"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_2/bias/accum_var"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_27"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_1/bias/accum_grad"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_28"
      op: "VarIsInitializedOp"
      input: "total"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_29"
      op: "VarIsInitializedOp"
      input: "Adadelta/conv2d_2/kernel/accum_grad"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init_2"
      op: "NoOp"
      input: "^Adadelta/conv2d_1/bias/accum_grad/Assign"
      input: "^Adadelta/conv2d_1/bias/accum_var/Assign"
      input: "^Adadelta/conv2d_1/kernel/accum_grad/Assign"
      input: "^Adadelta/conv2d_1/kernel/accum_var/Assign"
      input: "^Adadelta/conv2d_2/bias/accum_grad/Assign"
      input: "^Adadelta/conv2d_2/bias/accum_var/Assign"
      input: "^Adadelta/conv2d_2/kernel/accum_grad/Assign"
      input: "^Adadelta/conv2d_2/kernel/accum_var/Assign"
      input: "^Adadelta/decay/Assign"
      input: "^Adadelta/dense_1/bias/accum_grad/Assign"
      input: "^Adadelta/dense_1/bias/accum_var/Assign"
      input: "^Adadelta/dense_1/kernel/accum_grad/Assign"
      input: "^Adadelta/dense_1/kernel/accum_var/Assign"
      input: "^Adadelta/dense_2/bias/accum_grad/Assign"
      input: "^Adadelta/dense_2/bias/accum_var/Assign"
      input: "^Adadelta/dense_2/kernel/accum_grad/Assign"
      input: "^Adadelta/dense_2/kernel/accum_var/Assign"
      input: "^Adadelta/iter/Assign"
      input: "^Adadelta/learning_rate/Assign"
      input: "^Adadelta/rho/Assign"
      input: "^count/Assign"
      input: "^total/Assign"
    }
    node {
      name: "Placeholder_8"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_8"
      op: "AssignVariableOp"
      input: "Adadelta/iter"
      input: "Placeholder_8"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "ReadVariableOp_8"
      op: "ReadVariableOp"
      input: "Adadelta/iter"
      input: "^AssignVariableOp_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "Placeholder_9"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_9"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_grad"
      input: "Placeholder_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_9"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_grad"
      input: "^AssignVariableOp_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_10"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_10"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_grad"
      input: "Placeholder_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_10"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_grad"
      input: "^AssignVariableOp_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_11"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_11"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_grad"
      input: "Placeholder_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_11"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_grad"
      input: "^AssignVariableOp_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_12"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_12"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_grad"
      input: "Placeholder_12"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_12"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_grad"
      input: "^AssignVariableOp_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_13"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9216
            }
            dim {
              size: 128
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_13"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/kernel/accum_grad"
      input: "Placeholder_13"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_13"
      op: "ReadVariableOp"
      input: "Adadelta/dense_1/kernel/accum_grad"
      input: "^AssignVariableOp_13"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_14"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_14"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/bias/accum_grad"
      input: "Placeholder_14"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_14"
      op: "ReadVariableOp"
      input: "Adadelta/dense_1/bias/accum_grad"
      input: "^AssignVariableOp_14"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_15"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_15"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/kernel/accum_grad"
      input: "Placeholder_15"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_15"
      op: "ReadVariableOp"
      input: "Adadelta/dense_2/kernel/accum_grad"
      input: "^AssignVariableOp_15"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_16"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_16"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/bias/accum_grad"
      input: "Placeholder_16"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_16"
      op: "ReadVariableOp"
      input: "Adadelta/dense_2/bias/accum_grad"
      input: "^AssignVariableOp_16"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_17"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_17"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_var"
      input: "Placeholder_17"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_17"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_var"
      input: "^AssignVariableOp_17"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_18"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_18"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_var"
      input: "Placeholder_18"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_18"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_var"
      input: "^AssignVariableOp_18"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_19"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_19"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_var"
      input: "Placeholder_19"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_19"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_var"
      input: "^AssignVariableOp_19"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_20"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_20"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_var"
      input: "Placeholder_20"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_20"
      op: "ReadVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_var"
      input: "^AssignVariableOp_20"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_21"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9216
            }
            dim {
              size: 128
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_21"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/kernel/accum_var"
      input: "Placeholder_21"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_21"
      op: "ReadVariableOp"
      input: "Adadelta/dense_1/kernel/accum_var"
      input: "^AssignVariableOp_21"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9216
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_22"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_22"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/bias/accum_var"
      input: "Placeholder_22"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_22"
      op: "ReadVariableOp"
      input: "Adadelta/dense_1/bias/accum_var"
      input: "^AssignVariableOp_22"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_23"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_23"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/kernel/accum_var"
      input: "Placeholder_23"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_23"
      op: "ReadVariableOp"
      input: "Adadelta/dense_2/kernel/accum_var"
      input: "^AssignVariableOp_23"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_24"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_24"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/bias/accum_var"
      input: "Placeholder_24"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_24"
      op: "ReadVariableOp"
      input: "Adadelta/dense_2/bias/accum_var"
      input: "^AssignVariableOp_24"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_a2f50452896545938f28f05a52b3e15c/part"
          }
        }
      }
    }
    node {
      name: "save/StringJoin"
      op: "StringJoin"
      input: "save/Const"
      input: "save/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename"
      op: "ShardedFilename"
      input: "save/StringJoin"
      input: "save/ShardedFilename/shard"
      input: "save/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 28
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 28
              }
            }
            string_val: "Adadelta/conv2d_1/bias/accum_grad"
            string_val: "Adadelta/conv2d_1/bias/accum_var"
            string_val: "Adadelta/conv2d_1/kernel/accum_grad"
            string_val: "Adadelta/conv2d_1/kernel/accum_var"
            string_val: "Adadelta/conv2d_2/bias/accum_grad"
            string_val: "Adadelta/conv2d_2/bias/accum_var"
            string_val: "Adadelta/conv2d_2/kernel/accum_grad"
            string_val: "Adadelta/conv2d_2/kernel/accum_var"
            string_val: "Adadelta/decay"
            string_val: "Adadelta/dense_1/bias/accum_grad"
            string_val: "Adadelta/dense_1/bias/accum_var"
            string_val: "Adadelta/dense_1/kernel/accum_grad"
            string_val: "Adadelta/dense_1/kernel/accum_var"
            string_val: "Adadelta/dense_2/bias/accum_grad"
            string_val: "Adadelta/dense_2/bias/accum_var"
            string_val: "Adadelta/dense_2/kernel/accum_grad"
            string_val: "Adadelta/dense_2/kernel/accum_var"
            string_val: "Adadelta/iter"
            string_val: "Adadelta/learning_rate"
            string_val: "Adadelta/rho"
            string_val: "conv2d_1/bias"
            string_val: "conv2d_1/kernel"
            string_val: "conv2d_2/bias"
            string_val: "conv2d_2/kernel"
            string_val: "dense_1/bias"
            string_val: "dense_1/kernel"
            string_val: "dense_2/bias"
            string_val: "dense_2/kernel"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 28
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 28
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/ShardedFilename"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "Adadelta/conv2d_1/bias/accum_grad/Read/ReadVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_var/Read/ReadVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_grad/Read/ReadVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_var/Read/ReadVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_grad/Read/ReadVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_var/Read/ReadVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_grad/Read/ReadVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_var/Read/ReadVariableOp"
      input: "Adadelta/decay/Read/ReadVariableOp"
      input: "Adadelta/dense_1/bias/accum_grad/Read/ReadVariableOp"
      input: "Adadelta/dense_1/bias/accum_var/Read/ReadVariableOp"
      input: "Adadelta/dense_1/kernel/accum_grad/Read/ReadVariableOp"
      input: "Adadelta/dense_1/kernel/accum_var/Read/ReadVariableOp"
      input: "Adadelta/dense_2/bias/accum_grad/Read/ReadVariableOp"
      input: "Adadelta/dense_2/bias/accum_var/Read/ReadVariableOp"
      input: "Adadelta/dense_2/kernel/accum_grad/Read/ReadVariableOp"
      input: "Adadelta/dense_2/kernel/accum_var/Read/ReadVariableOp"
      input: "Adadelta/iter/Read/ReadVariableOp"
      input: "Adadelta/learning_rate/Read/ReadVariableOp"
      input: "Adadelta/rho/Read/ReadVariableOp"
      input: "conv2d_1/bias/Read/ReadVariableOp"
      input: "conv2d_1/kernel/Read/ReadVariableOp"
      input: "conv2d_2/bias/Read/ReadVariableOp"
      input: "conv2d_2/kernel/Read/ReadVariableOp"
      input: "dense_1/bias/Read/ReadVariableOp"
      input: "dense_1/kernel/Read/ReadVariableOp"
      input: "dense_2/bias/Read/ReadVariableOp"
      input: "dense_2/kernel/Read/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/ShardedFilename"
      input: "^save/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save/ShardedFilename"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Identity"
      op: "Identity"
      input: "save/Const"
      input: "^save/MergeV2Checkpoints"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 28
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 28
              }
            }
            string_val: "Adadelta/conv2d_1/bias/accum_grad"
            string_val: "Adadelta/conv2d_1/bias/accum_var"
            string_val: "Adadelta/conv2d_1/kernel/accum_grad"
            string_val: "Adadelta/conv2d_1/kernel/accum_var"
            string_val: "Adadelta/conv2d_2/bias/accum_grad"
            string_val: "Adadelta/conv2d_2/bias/accum_var"
            string_val: "Adadelta/conv2d_2/kernel/accum_grad"
            string_val: "Adadelta/conv2d_2/kernel/accum_var"
            string_val: "Adadelta/decay"
            string_val: "Adadelta/dense_1/bias/accum_grad"
            string_val: "Adadelta/dense_1/bias/accum_var"
            string_val: "Adadelta/dense_1/kernel/accum_grad"
            string_val: "Adadelta/dense_1/kernel/accum_var"
            string_val: "Adadelta/dense_2/bias/accum_grad"
            string_val: "Adadelta/dense_2/bias/accum_var"
            string_val: "Adadelta/dense_2/kernel/accum_grad"
            string_val: "Adadelta/dense_2/kernel/accum_var"
            string_val: "Adadelta/iter"
            string_val: "Adadelta/learning_rate"
            string_val: "Adadelta/rho"
            string_val: "conv2d_1/bias"
            string_val: "conv2d_1/kernel"
            string_val: "conv2d_2/bias"
            string_val: "conv2d_2/kernel"
            string_val: "dense_1/bias"
            string_val: "dense_1/kernel"
            string_val: "dense_2/bias"
            string_val: "dense_2/kernel"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 28
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 28
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Identity_1"
      op: "Identity"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_grad"
      input: "save/Identity_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_2"
      op: "Identity"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/bias/accum_var"
      input: "save/Identity_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_3"
      op: "Identity"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_grad"
      input: "save/Identity_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_4"
      op: "Identity"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_1/kernel/accum_var"
      input: "save/Identity_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_5"
      op: "Identity"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_grad"
      input: "save/Identity_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_6"
      op: "Identity"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/bias/accum_var"
      input: "save/Identity_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_7"
      op: "Identity"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_6"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_grad"
      input: "save/Identity_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_8"
      op: "Identity"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_7"
      op: "AssignVariableOp"
      input: "Adadelta/conv2d_2/kernel/accum_var"
      input: "save/Identity_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_9"
      op: "Identity"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_8"
      op: "AssignVariableOp"
      input: "Adadelta/decay"
      input: "save/Identity_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_10"
      op: "Identity"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_9"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/bias/accum_grad"
      input: "save/Identity_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_11"
      op: "Identity"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_10"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/bias/accum_var"
      input: "save/Identity_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_12"
      op: "Identity"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_11"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/kernel/accum_grad"
      input: "save/Identity_12"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_13"
      op: "Identity"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_12"
      op: "AssignVariableOp"
      input: "Adadelta/dense_1/kernel/accum_var"
      input: "save/Identity_13"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_14"
      op: "Identity"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_13"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/bias/accum_grad"
      input: "save/Identity_14"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_15"
      op: "Identity"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_14"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/bias/accum_var"
      input: "save/Identity_15"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_16"
      op: "Identity"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_15"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/kernel/accum_grad"
      input: "save/Identity_16"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_17"
      op: "Identity"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_16"
      op: "AssignVariableOp"
      input: "Adadelta/dense_2/kernel/accum_var"
      input: "save/Identity_17"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_18"
      op: "Identity"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_17"
      op: "AssignVariableOp"
      input: "Adadelta/iter"
      input: "save/Identity_18"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "save/Identity_19"
      op: "Identity"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_18"
      op: "AssignVariableOp"
      input: "Adadelta/learning_rate"
      input: "save/Identity_19"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_20"
      op: "Identity"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_19"
      op: "AssignVariableOp"
      input: "Adadelta/rho"
      input: "save/Identity_20"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_21"
      op: "Identity"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_20"
      op: "AssignVariableOp"
      input: "conv2d_1/bias"
      input: "save/Identity_21"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_22"
      op: "Identity"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_21"
      op: "AssignVariableOp"
      input: "conv2d_1/kernel"
      input: "save/Identity_22"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_23"
      op: "Identity"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_22"
      op: "AssignVariableOp"
      input: "conv2d_2/bias"
      input: "save/Identity_23"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_24"
      op: "Identity"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_23"
      op: "AssignVariableOp"
      input: "conv2d_2/kernel"
      input: "save/Identity_24"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_25"
      op: "Identity"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_24"
      op: "AssignVariableOp"
      input: "dense_1/bias"
      input: "save/Identity_25"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_26"
      op: "Identity"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_25"
      op: "AssignVariableOp"
      input: "dense_1/kernel"
      input: "save/Identity_26"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_27"
      op: "Identity"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_26"
      op: "AssignVariableOp"
      input: "dense_2/bias"
      input: "save/Identity_27"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_28"
      op: "Identity"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_27"
      op: "AssignVariableOp"
      input: "dense_2/kernel"
      input: "save/Identity_28"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/restore_shard"
      op: "NoOp"
      input: "^save/AssignVariableOp"
      input: "^save/AssignVariableOp_1"
      input: "^save/AssignVariableOp_10"
      input: "^save/AssignVariableOp_11"
      input: "^save/AssignVariableOp_12"
      input: "^save/AssignVariableOp_13"
      input: "^save/AssignVariableOp_14"
      input: "^save/AssignVariableOp_15"
      input: "^save/AssignVariableOp_16"
      input: "^save/AssignVariableOp_17"
      input: "^save/AssignVariableOp_18"
      input: "^save/AssignVariableOp_19"
      input: "^save/AssignVariableOp_2"
      input: "^save/AssignVariableOp_20"
      input: "^save/AssignVariableOp_21"
      input: "^save/AssignVariableOp_22"
      input: "^save/AssignVariableOp_23"
      input: "^save/AssignVariableOp_24"
      input: "^save/AssignVariableOp_25"
      input: "^save/AssignVariableOp_26"
      input: "^save/AssignVariableOp_27"
      input: "^save/AssignVariableOp_3"
      input: "^save/AssignVariableOp_4"
      input: "^save/AssignVariableOp_5"
      input: "^save/AssignVariableOp_6"
      input: "^save/AssignVariableOp_7"
      input: "^save/AssignVariableOp_8"
      input: "^save/AssignVariableOp_9"
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/restore_shard"
    }
    versions {
      producer: 38
    }
  }
  saver_def {
    filename_tensor_name: "save/Const:0"
    save_tensor_name: "save/Identity:0"
    restore_op_name: "save/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\021conv2d_1/kernel:0\022\026conv2d_1/kernel/Assign\032%conv2d_1/kernel/Read/ReadVariableOp:0(\0012,conv2d_1/kernel/Initializer/random_uniform:08\001"
        value: "\n\017conv2d_1/bias:0\022\024conv2d_1/bias/Assign\032#conv2d_1/bias/Read/ReadVariableOp:0(\0012!conv2d_1/bias/Initializer/zeros:08\001"
        value: "\n\021conv2d_2/kernel:0\022\026conv2d_2/kernel/Assign\032%conv2d_2/kernel/Read/ReadVariableOp:0(\0012,conv2d_2/kernel/Initializer/random_uniform:08\001"
        value: "\n\017conv2d_2/bias:0\022\024conv2d_2/bias/Assign\032#conv2d_2/bias/Read/ReadVariableOp:0(\0012!conv2d_2/bias/Initializer/zeros:08\001"
        value: "\n\020dense_1/kernel:0\022\025dense_1/kernel/Assign\032$dense_1/kernel/Read/ReadVariableOp:0(\0012+dense_1/kernel/Initializer/random_uniform:08\001"
        value: "\n\016dense_1/bias:0\022\023dense_1/bias/Assign\032\"dense_1/bias/Read/ReadVariableOp:0(\0012 dense_1/bias/Initializer/zeros:08\001"
        value: "\n\020dense_2/kernel:0\022\025dense_2/kernel/Assign\032$dense_2/kernel/Read/ReadVariableOp:0(\0012+dense_2/kernel/Initializer/random_uniform:08\001"
        value: "\n\016dense_2/bias:0\022\023dense_2/bias/Assign\032\"dense_2/bias/Read/ReadVariableOp:0(\0012 dense_2/bias/Initializer/zeros:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\021conv2d_1/kernel:0\022\026conv2d_1/kernel/Assign\032%conv2d_1/kernel/Read/ReadVariableOp:0(\0012,conv2d_1/kernel/Initializer/random_uniform:08\001"
        value: "\n\017conv2d_1/bias:0\022\024conv2d_1/bias/Assign\032#conv2d_1/bias/Read/ReadVariableOp:0(\0012!conv2d_1/bias/Initializer/zeros:08\001"
        value: "\n\021conv2d_2/kernel:0\022\026conv2d_2/kernel/Assign\032%conv2d_2/kernel/Read/ReadVariableOp:0(\0012,conv2d_2/kernel/Initializer/random_uniform:08\001"
        value: "\n\017conv2d_2/bias:0\022\024conv2d_2/bias/Assign\032#conv2d_2/bias/Read/ReadVariableOp:0(\0012!conv2d_2/bias/Initializer/zeros:08\001"
        value: "\n\020dense_1/kernel:0\022\025dense_1/kernel/Assign\032$dense_1/kernel/Read/ReadVariableOp:0(\0012+dense_1/kernel/Initializer/random_uniform:08\001"
        value: "\n\016dense_1/bias:0\022\023dense_1/bias/Assign\032\"dense_1/bias/Read/ReadVariableOp:0(\0012 dense_1/bias/Initializer/zeros:08\001"
        value: "\n\020dense_2/kernel:0\022\025dense_2/kernel/Assign\032$dense_2/kernel/Read/ReadVariableOp:0(\0012+dense_2/kernel/Initializer/random_uniform:08\001"
        value: "\n\016dense_2/bias:0\022\023dense_2/bias/Assign\032\"dense_2/bias/Read/ReadVariableOp:0(\0012 dense_2/bias/Initializer/zeros:08\001"
        value: "\n\017Adadelta/iter:0\022\024Adadelta/iter/Assign\032#Adadelta/iter/Read/ReadVariableOp:0(\0012!Adadelta/iter/Initializer/zeros:0H\003"
        value: "\n\020Adadelta/decay:0\022\025Adadelta/decay/Assign\032$Adadelta/decay/Read/ReadVariableOp:0(\0012*Adadelta/decay/Initializer/initial_value:0H\003"
        value: "\n\030Adadelta/learning_rate:0\022\035Adadelta/learning_rate/Assign\032,Adadelta/learning_rate/Read/ReadVariableOp:0(\00122Adadelta/learning_rate/Initializer/initial_value:0H\003"
        value: "\n\016Adadelta/rho:0\022\023Adadelta/rho/Assign\032\"Adadelta/rho/Read/ReadVariableOp:0(\0012(Adadelta/rho/Initializer/initial_value:0H\003"
        value: "\n%Adadelta/conv2d_1/kernel/accum_grad:0\022*Adadelta/conv2d_1/kernel/accum_grad/Assign\0329Adadelta/conv2d_1/kernel/accum_grad/Read/ReadVariableOp:0(\00127Adadelta/conv2d_1/kernel/accum_grad/Initializer/zeros:0"
        value: "\n#Adadelta/conv2d_1/bias/accum_grad:0\022(Adadelta/conv2d_1/bias/accum_grad/Assign\0327Adadelta/conv2d_1/bias/accum_grad/Read/ReadVariableOp:0(\00125Adadelta/conv2d_1/bias/accum_grad/Initializer/zeros:0"
        value: "\n%Adadelta/conv2d_2/kernel/accum_grad:0\022*Adadelta/conv2d_2/kernel/accum_grad/Assign\0329Adadelta/conv2d_2/kernel/accum_grad/Read/ReadVariableOp:0(\00127Adadelta/conv2d_2/kernel/accum_grad/Initializer/zeros:0"
        value: "\n#Adadelta/conv2d_2/bias/accum_grad:0\022(Adadelta/conv2d_2/bias/accum_grad/Assign\0327Adadelta/conv2d_2/bias/accum_grad/Read/ReadVariableOp:0(\00125Adadelta/conv2d_2/bias/accum_grad/Initializer/zeros:0"
        value: "\n$Adadelta/dense_1/kernel/accum_grad:0\022)Adadelta/dense_1/kernel/accum_grad/Assign\0328Adadelta/dense_1/kernel/accum_grad/Read/ReadVariableOp:0(\00126Adadelta/dense_1/kernel/accum_grad/Initializer/zeros:0"
        value: "\n\"Adadelta/dense_1/bias/accum_grad:0\022\'Adadelta/dense_1/bias/accum_grad/Assign\0326Adadelta/dense_1/bias/accum_grad/Read/ReadVariableOp:0(\00124Adadelta/dense_1/bias/accum_grad/Initializer/zeros:0"
        value: "\n$Adadelta/dense_2/kernel/accum_grad:0\022)Adadelta/dense_2/kernel/accum_grad/Assign\0328Adadelta/dense_2/kernel/accum_grad/Read/ReadVariableOp:0(\00126Adadelta/dense_2/kernel/accum_grad/Initializer/zeros:0"
        value: "\n\"Adadelta/dense_2/bias/accum_grad:0\022\'Adadelta/dense_2/bias/accum_grad/Assign\0326Adadelta/dense_2/bias/accum_grad/Read/ReadVariableOp:0(\00124Adadelta/dense_2/bias/accum_grad/Initializer/zeros:0"
        value: "\n$Adadelta/conv2d_1/kernel/accum_var:0\022)Adadelta/conv2d_1/kernel/accum_var/Assign\0328Adadelta/conv2d_1/kernel/accum_var/Read/ReadVariableOp:0(\00126Adadelta/conv2d_1/kernel/accum_var/Initializer/zeros:0"
        value: "\n\"Adadelta/conv2d_1/bias/accum_var:0\022\'Adadelta/conv2d_1/bias/accum_var/Assign\0326Adadelta/conv2d_1/bias/accum_var/Read/ReadVariableOp:0(\00124Adadelta/conv2d_1/bias/accum_var/Initializer/zeros:0"
        value: "\n$Adadelta/conv2d_2/kernel/accum_var:0\022)Adadelta/conv2d_2/kernel/accum_var/Assign\0328Adadelta/conv2d_2/kernel/accum_var/Read/ReadVariableOp:0(\00126Adadelta/conv2d_2/kernel/accum_var/Initializer/zeros:0"
        value: "\n\"Adadelta/conv2d_2/bias/accum_var:0\022\'Adadelta/conv2d_2/bias/accum_var/Assign\0326Adadelta/conv2d_2/bias/accum_var/Read/ReadVariableOp:0(\00124Adadelta/conv2d_2/bias/accum_var/Initializer/zeros:0"
        value: "\n#Adadelta/dense_1/kernel/accum_var:0\022(Adadelta/dense_1/kernel/accum_var/Assign\0327Adadelta/dense_1/kernel/accum_var/Read/ReadVariableOp:0(\00125Adadelta/dense_1/kernel/accum_var/Initializer/zeros:0"
        value: "\n!Adadelta/dense_1/bias/accum_var:0\022&Adadelta/dense_1/bias/accum_var/Assign\0325Adadelta/dense_1/bias/accum_var/Read/ReadVariableOp:0(\00123Adadelta/dense_1/bias/accum_var/Initializer/zeros:0"
        value: "\n#Adadelta/dense_2/kernel/accum_var:0\022(Adadelta/dense_2/kernel/accum_var/Assign\0327Adadelta/dense_2/kernel/accum_var/Read/ReadVariableOp:0(\00125Adadelta/dense_2/kernel/accum_var/Initializer/zeros:0"
        value: "\n!Adadelta/dense_2/bias/accum_var:0\022&Adadelta/dense_2/bias/accum_var/Assign\0325Adadelta/dense_2/bias/accum_var/Read/ReadVariableOp:0(\00123Adadelta/dense_2/bias/accum_var/Initializer/zeros:0"
      }
    }
  }
  signature_def {
    key: "predict"
    value {
      inputs {
        key: "conv2d_1_input:0"
        value {
          name: "conv2d_1_input:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 28
            }
            dim {
              size: 28
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "dense_2/Softmax:0"
        value {
          name: "dense_2/Softmax:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
